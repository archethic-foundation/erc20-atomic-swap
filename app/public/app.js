(()=>{window.onload=async function(){if(typeof window.ethereum<"u")console.log("MetaMask is installed!");else throw"No ethereum provider is installed"};$("#connectMetamaskBtn").on("click",async()=>{try{$("#connectMetamaskBtn").hide(),$("#connectMetamaskBtnSpinner").show(),provider=new ethers.providers.Web3Provider(window.ethereum),await provider.send("eth_requestAccounts",[]),await L(provider),$("#connectMetamaskBtnSpinner").hide(),$("#connectMetamaskBtn").show()}catch(t){$("#connectMetamaskBtnSpinner").hide(),$("#connectMetamaskBtn").show(),$("#error").text(`An error occured: ${t.message||t}`).show()}});var h,g;async function L(t){let{chainId:e}=await t.getNetwork(),n=t.getSigner(),a;switch(e){case 80001:a="Polygon-logo.svg",h="https://mumbai.polygonscan.com",$("#fromChain").text("Polygon"),$("#fromNetworkLabel").text("Mumbai Polygon Testnet"),$("#toNetworkLabel").text("Archethic Testnet");break;case 137:a="Polygon-logo.svg",h="https://polygonscan.com",$("#fromChain").text("Polygon"),$("#fromNetworkLabel").text("Polygon"),$("#toNetworkLabel").text("Archethic");break;case 97:a="BSC-logo.svg",h="https://testnet.bscscan.com",$("#fromChain").text("Binance"),$("#fromNetworkLabel").text("BSC Testnet"),$("#toNetworkLabel").text("Archethic Testnet");break;case 56:a="BSC-logo.svg",h="https://bscscan.com",$("#fromChain").text("Binance"),$("#fromNetworkLabel").text("BSC"),$("#toNetworkLabel").text("Archethic");break;case 5:a="Ethereum-logo.svg",h="https://goerli.etherscan.io",$("#fromChain").text("Ethereum"),$("#fromNetworkLabel").text("Goerli Ethereum Testnet"),$("#toNetworkLabel").text("Archethic Testnet");break;case 1337:a="Ethereum-logo.svg",h="",$("#fromChain").text("Ethereum"),$("#fromNetworkLabel").text("Ethereum Devnet"),$("#toNetworkLabel").text("Archethic Devnet");break;default:a="Ethereum-logo.svg",h="https://etherscan.io",$("#fromChain").text("Ethereum"),$("#fromNetworkLabel").text("Ethereum"),$("#toNetworkLabel").text("Archethic");break}let{archethicEndpoint:o,unirisTokenAddress:r,recipientEthereum:s,sufficientFunds:m,UCOPrice:c}=await D(e);if(g=`${o}/explorer/transaction`,$("#sourceChainImg").attr("src",`assets/images/bc-logos/${a}`),$("#main").hide(),$("#swapForm").show(),$("#ucoPrice").text(`1 UCO = ${c}$`).show(),$("#swapBalanceUSD").text(0),!m){$("#error").text("An error occured: Bridge has insuffficient funds. Please retry later");return}console.log("Archethic endpoint: ",o);let u=await n.getAddress(),w=await v(r,t),i=await w.balanceOf(u),p=ethers.utils.formatUnits(i,18);$("#fromBalanceUCO").text(new Intl.NumberFormat().format(parseFloat(p).toFixed(2))),$("#fromBalanceUSD").text(new Intl.NumberFormat().format((p*c).toFixed(2))),$("#recipientAddress").on("change",async l=>{let f=await A($(l.target).val())/1e8;$("#toBalanceUCO").text(new Intl.NumberFormat().format(parseFloat(f).toFixed(2))),$("#toBalanceUSD").text(new Intl.NumberFormat().format((c*f).toFixed(2))),$("#btnSwap").show()}),$("#recipientAddress").focus(),$("#nbTokensToSwap").on("change",l=>{let d=$(l.target).val();$("#swapBalanceUSD").text((d*c).toFixed(2))}),$("#swapForm").on("submit",async l=>{if(l.preventDefault(),!l.target.checkValidity())return;$("#btnSwap").hide();let d=$("#recipientAddress").val();await N(n,w,s,d,e,archethic,c)})}async function v(t,e){let n=await P();return new ethers.Contract(t,n,e)}async function N(t,e,n,a,o,r){$("#steps").show(),$("#txSummary").hide();let s=new Uint8Array(32);crypto.getRandomValues(s);let m=S(s),c=await crypto.subtle.digest("SHA-256",s);c=new Uint8Array(c);let u=S(c),w=$("#nbTokensToSwap").val();$("#ethDeploymentStep").addClass("is-active");try{let i=await E(n,e.address,w,c,t,7200);$("#ethDeploymentStep").removeClass("is-active"),$("#txSummary").show();let p=i.address;$("#txSummary1Label").html(`Contract address on Ethereum: <a href="${h}/address/${i.address}">${i.address}</a>`),$("#txSummary1").show(),$("#ethTransferStep").addClass("is-active");let l=await O(w,p,e,t);console.log(`${w} UCO transfered`),$("#txSummary2Label").html(`Provision UCO: <a href="${h}/tx/${l.transactionHash}">${l.transactionHash}</a>`),$("#txSummary2").show(),$("#ethTransferStep").removeClass("is-active"),$("#archethicDeploymentStep").addClass("is-active");let d=await U(u,a,w,p,o);console.log("Contract address on Archethic",d),$("#txSummary3Label").html(`Contract address on Archethic : <a href="${g}/${d}">${d}</a>`),$("#txSummary3").show(),$("#archethicDeploymentStep").removeClass("is-active"),$("#swapStep").addClass("is-active");let f=await F(i,t,m);console.log(`Ethereum's withdraw transaction - ${f.transactionHash}`),$("#txSummary4Label").html(`Ethereum swap: <a href="${h}/tx/${f.transactionHash}">${f.transactionHash}</a>`),$("#txSummary4").show();let k=await t.getAddress(),B=await e.balanceOf(k),C=ethers.utils.formatUnits(B,18);$("#fromBalanceUCO").text(new Intl.NumberFormat().format(parseFloat(C).toFixed(2))),$("#fromBalanceUSD").text(C*r);let x=await H(d,p,f.transactionHash,m,o);console.log(`Archethic's withdraw transaction ${x}`),$("#txSummary5Label").html(`Archethic swap : <a href="${g}/${x}">${x}</a>`),$("#txSummary5").show(),$("#swapStep").removeClass("is-active"),console.log("Token swap finish");let b=await A(a)/1e8;$("#toBalanceUCO").text(parseFloat(b).toFixed(2)),$("#toBalanceUSD").text(r*b),$("#txSummary").show()}catch(i){console.error(i.message||i),$("#error").text(`An error occured: ${i.message||i}`).show()}}async function U(t,e,n,a,o){let r=new Date;r.setSeconds(r.getSeconds()+1e4);let s=Math.floor(r/1e3);return fetch("/swap/deployContract",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({secretHash:t,recipientAddress:e,amount:n*1e8,endTime:s,ethereumContractAddress:a,ethereumChainId:o})}).then(y).then(m=>m.contractAddress)}async function F(t,e,n){return await(await(await t.connect(e)).withdraw(`0x${n}`,{gasLimit:1e7})).wait()}async function H(t,e,n,a,o){return fetch("/swap/withdraw",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({archethicContractAddress:t,ethereumContractAddress:e,ethereumWithdrawTransaction:n,secret:a,ethereumChainId:o})}).then(y).then(r=>{let{archethicWithdrawTransaction:s}=r;return s})}async function E(t,e,n,a,o,r){let{abi:s,bytecode:m}=await I(),u=await new ethers.ContractFactory(s,m,o).deploy(t,e,ethers.utils.parseUnits(n,18),a,r,{gasLimit:1e6});return await u.deployTransaction.wait(),console.log("HTLC contract deployed at "+u.address),u}async function O(t,e,n,a){return await(await n.connect(a).transfer(e,ethers.utils.parseUnits(t,18))).wait()}var T=[];for(let t=0;t<=255;++t){let e=t.toString(16).padStart(2,"0");T.push(e)}function S(t){let e=new Uint8Array(t),n=new Array(e.length);for(let a=0;a<e.length;++a)n[a]=T[e[a]];return n.join("")}async function D(t){return fetch("/status",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({ethereumChainId:t})}).then(y).then(e=>{if(e.status!="ok")throw e.status;return{archethicEndpoint:e.archethicEndpoint,unirisTokenAddress:e.unirisTokenAddress,recipientEthereum:e.recipientEthereum,sufficientFunds:e.sufficientFunds,UCOPrice:e.UCOPrice}})}async function P(){return await(await fetch("uco_abi.json")).json()}async function I(){let e=await(await fetch("HTLC.json")).json();return{abi:e.abi,bytecode:e.bytecode}}async function y(t){return new Promise(function(e,n){t.status>=200&&t.status<=299?t.json().then(e):t.json().then(n).catch(()=>n(t.statusText))})}async function A(t){return fetch(`/balances/archethic/${t}`).then(y).then(e=>e.balance)}})();
//# sourceMappingURL=app.js.map
