(()=>{window.onload=async function(){if(typeof window.ethereum<"u")console.log("MetaMask is installed!");else throw"No ethereum provider is installed"};$("#connectMetamaskBtn").on("click",async()=>{provider=new ethers.providers.Web3Provider(window.ethereum),$("#main").hide(),await p(provider)});async function p(t){$("#swapForm").show();let{_archethicEndpoint:e,unirisTokenAddress:n,recipientEthereum:s}=await C();await t.send("eth_requestAccounts",[]);let r=t.getSigner(),a=await r.getAddress(),o=await f(n,t),i=await o.balanceOf(a);$("#ucoEthBalance").text(ethers.utils.formatUnits(i,18)),$("#swapForm").on("submit",d=>{if(d.preventDefault(),!swapForm.checkValidity())return;let c=$("#recipientAddress").val();y(r,o,s,c)})}async function f(t,e){let n=await b();return new ethers.Contract(t,n,e)}async function y(t,e,n,s){let r=new Uint8Array(32);crypto.getRandomValues(r);let a=l(r),o=await crypto.subtle.digest("SHA-256",r);o=new Uint8Array(o);let i=l(o);console.log("hash",i);let d=$("#nbTokensToSwap").val();try{let h=(await A(n,e.address,d,o,t,1e4)).address;await g(d,h,e,t);let u=await m(i,s,d,h);console.log("Contract address on Archethic",u),await T(u,h,a)}catch(c){console.error(c)}}async function m(t,e,n,s){let r=new Date;r.setSeconds(r.getSeconds()+1e4);let a=Math.floor(r/1e3);return fetch("/swap/deployContract",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({secretHash:t,recipientAddress:e,amount:n*1e8,endTime:a,ethereumContractAddress:s})}).then(o=>o.json()).then(o=>o.contractAddress)}async function T(t,e,n){return fetch("/swap/withdraw",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({archethicContractAddress:t,ethereumContractAddress:e,secret:n})}).then(s=>s.json())}async function A(t,e,n,s,r,a){let{abi:o,bytecode:i}=await H(),c=await new ethers.ContractFactory(o,i,r).deploy(t,e,ethers.utils.parseUnits(n,18),s,a,{gasLimit:1e6});return await c.deployTransaction.wait(),console.log("HTLC contract deployed at "+c.address),c}async function g(t,e,n,s){await n.connect(s).transfer(e,ethers.utils.parseUnits(t,18));let a=n.filters.Transfer(null,e);return new Promise((o,i)=>{n.on(a,(d,c,h,u)=>{console.log(ethers.utils.formatUnits(h,18)+" UCO transfered"),o()})})}var w=[];for(let t=0;t<=255;++t){let e=t.toString(16).padStart(2,"0");w.push(e)}function l(t){let e=new Uint8Array(t),n=new Array(e.length);for(let s=0;s<e.length;++s)n[s]=w[e[s]];return n.join("")}async function C(){return fetch("/status").then(t=>t.json()).then(t=>({archethicEndpoint:t.archethicEndpoint,unirisTokenAddress:t.unirisTokenAddress,recipientEthereum:t.recipientEthereum}))}async function b(){return await(await fetch("uco_ABI.json")).json()}async function H(){let e=await(await fetch("HTLC.json")).json();return{abi:e.abi,bytecode:e.bytecode}}})();
//# sourceMappingURL=app.js.map
