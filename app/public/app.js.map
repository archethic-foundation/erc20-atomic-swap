{
  "version": 3,
  "sources": ["../client/ui.js", "../client/utils.js", "../client/chain.js", "../client/contract.js", "../client/service.js", "../client/app.js"],
  "sourcesContent": ["\nexport function initPageBridge() {\n\n    $(\"#connectMetamaskBtnSpinner\").hide();\n    $(\"#connectMetamaskBtn\").show();\n\n    $(\"#main\").hide();\n    $(\"#swapForm\").show();\n\n    $('#nbTokensToSwap').prop('disabled', false);\n    $('#recipientAddress').prop('disabled', false);\n\n    initTxSummary();\n\n    $(\"#error\").text(\"\");\n\n    $('#btnSwap').prop('disabled', true);\n    $(\"#btnSwap\").text(\"Transfer\");\n    $(\"#btnSwap\").show();\n    $(\"#btnSwapSpinner\").hide();\n\n    initProgressBar();\n}\n\nexport function changeBtnToTransferInProgress() {\n    $(\"#btnSwap\").hide();\n    $('#btnSwapSpinner').prop('disabled', true);\n    $(\"#btnSwapSpinner\").text(\"Transfering\");\n    $(\"#btnSwapSpinner\").show();\n}\n\nfunction initTxSummary() {\n    $(\"#txSummary1Label\").text(\"\");\n    $(\"#txSummary1\").hide();\n    $(\"#txSummary2Label\").text(\"\");\n    $(\"#txSummary2\").hide();\n    $(\"#txSummary3Label\").text(\"\");\n    $(\"#txSummary3\").hide();\n    $(\"#txSummary4Label\").text(\"\");\n    $(\"#txSummary4\").hide();\n    $(\"#txSummary5Label\").text(\"\");\n    $(\"#txSummary5\").hide();\n}\n\nexport function initProgressBar() {\n\n    $(\"#ethDeploymentStep\").removeClass(\"is-active\");\n    $(\"#ethDeploymentStep\").removeClass(\"is-failed\");\n    $(\"#ethTransferStep\").removeClass(\"is-active\");\n    $(\"#ethTransferStep\").removeClass(\"is-failed\");\n    $(\"#archethicDeploymentStep\").removeClass(\"is-active\");\n    $(\"#archethicDeploymentStep\").removeClass(\"is-failed\");\n    $(\"#swapStep\").removeClass(\"is-active\");\n    $(\"#swapStep\").removeClass(\"is-failed\");\n}\n", "\n\nexport async function handleResponse(response) {\n    return new Promise(function (resolve, reject) {\n        if (response.status >= 200 && response.status <= 299) {\n            response.json().then(resolve);\n        } else {\n            response\n                .json()\n                .then(reject)\n                .catch(() => reject(response.statusText));\n        }\n    });\n}\n\nconst byteToHex = [];\nfor (let n = 0; n <= 0xff; ++n) {\n    const hexOctet = n.toString(16).padStart(2, \"0\");\n    byteToHex.push(hexOctet);\n}\n\nexport function uint8ArrayToHex(bytes) {\n    const buff = new Uint8Array(bytes);\n    const hexOctets = new Array(buff.length);\n\n    for (let i = 0; i < buff.length; ++i) {\n        hexOctets[i] = byteToHex[buff[i]];\n    }\n\n    return hexOctets.join(\"\");\n}\n\n\nexport function handleError(e) {\n    $('#btnSwap').prop('disabled', false);\n    $('#nbTokensToSwap').prop('disabled', false);\n    $('#recipientAddress').prop('disabled', false);\n    $(\"#btnSwap\").show();\n    $(\"#btnSwapSpinner\").hide();\n\n    console.error(e.message || e);\n    $(\"#error\")\n        .text(`${e.message || e}`)\n        .show();\n\n    switch (step) {\n        case 1:\n            $(\"#ethDeploymentStep\").removeClass(\"is-active\");\n            $(\"#ethDeploymentStep\").addClass(\"is-failed\");\n            break;\n        case 2:\n            $(\"#ethTransferStep\").removeClass(\"is-active\");\n            $(\"#ethTransferStep\").addClass(\"is-failed\");\n            break;\n        case 3:\n            $(\"#archethicDeploymentStep\").removeClass(\"is-active\");\n            $(\"#archethicDeploymentStep\").addClass(\"is-failed\");\n            break;\n        case 4:\n            $(\"#swapStep\").removeClass(\"is-active\");\n            $(\"#swapStep\").addClass(\"is-failed\");\n            break;\n        default:\n            break;\n    }\n}", "import { handleResponse } from \"./utils.js\";\n\nexport function initChainContext(ethChainId) {\n\n    switch (ethChainId) {\n        case 80001:\n            sourceChainLogo = \"Polygon-logo.svg\";\n            fromChainName = \"Polygon\";\n\n            $(\"#fromChain\").text(fromChainName)\n            $(\"#fromNetworkLabel\").text(\"Mumbai Polygon Testnet\");\n            $(\"#toNetworkLabel\").text(\"Archethic Testnet\");\n            break;\n        case 137:\n            sourceChainLogo = \"Polygon-logo.svg\";\n            fromChainName = \"Polygon\";\n\n            $(\"#fromChain\").text(fromChainName);\n            $(\"#fromNetworkLabel\").text(\"Polygon\");\n            $(\"#toNetworkLabel\").text(\"Archethic\");\n            break;\n        case 97:\n            sourceChainLogo = \"BSC-logo.svg\";\n            fromChainName = \"Binance\";\n\n            $(\"#fromChain\").text(fromChainName);\n            $(\"#fromNetworkLabel\").text(\"BSC Testnet\");\n            $(\"#toNetworkLabel\").text(\"Archethic Testnet\");\n            break;\n        case 56:\n            sourceChainLogo = \"BSC-logo.svg\";\n            fromChainName = \"Binance\";\n\n            $(\"#fromChain\").text(fromChainName);\n            $(\"#fromNetworkLabel\").text(\"BSC\");\n            $(\"#toNetworkLabel\").text(\"Archethic\");\n            break;\n        case 5:\n            sourceChainLogo = \"Ethereum-logo.svg\";\n            fromChainName = \"Ethereum\";\n\n            $(\"#fromChain\").text(fromChainName);\n            $(\"#fromNetworkLabel\").text(\"Goerli Ethereum Testnet\");\n            $(\"#toNetworkLabel\").text(\"Archethic Testnet\");\n            break;\n        case 1337:\n            sourceChainLogo = \"Ethereum-logo.svg\";\n            fromChainName = \"Ethereum\";\n\n            $(\"#fromChain\").text(fromChainName);\n            $(\"#fromNetworkLabel\").text(\"Ethereum Devnet\");\n            $(\"#toNetworkLabel\").text(\"Archethic Devnet\");\n            break;\n        default:\n            sourceChainLogo = \"Ethereum-logo.svg\";\n            fromChainName = \"Ethereum\";\n\n            $(\"#fromChain\").text(fromChainName);\n            $(\"#fromNetworkLabel\").text(\"Ethereum\");\n            $(\"#toNetworkLabel\").text(\"Archethic\");\n            break;\n    }\n    $(\"#sourceChainImg\").attr(\"src\", `assets/images/bc-logos/${sourceChainLogo}`);\n\n    return fromChainName;\n}\n\nexport async function getConfig(ethChainId) {\n\n    return fetch(\"/status\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n            ethereumChainId: ethChainId,\n        }),\n    })\n        .then(handleResponse)\n        .then((r) => {\n            if (r.status != \"ok\") {\n                throw r.status;\n            }\n\n            return {\n                archethicEndpoint: r.archethicEndpoint,\n                unirisTokenAddress: r.unirisTokenAddress,\n                recipientEthereum: r.recipientEthereum,\n                sufficientFunds: r.sufficientFunds,\n                UCOPrice: r.UCOPrice,\n                sourceChainExplorer: r.sourceChainExplorer,\n                bridgeAddress: r.bridgeAddress\n            };\n        });\n}\n", "\nimport { handleResponse } from \"./utils.js\";\n\nexport async function getERC20Contract(unirisTokenAddress, provider) {\n    const unirisTokenABI = await getUnirisTokenABI();\n    return new ethers.Contract(unirisTokenAddress, unirisTokenABI, provider);\n}\n\nexport async function getHTLC_Contract(HTLC_Address, provider) {\n    const { abi: HTLCABI } = await getHTLC();\n    return new ethers.Contract(HTLC_Address, HTLCABI, provider)\n}\n\nexport async function deployHTLC(\n    recipientEthereum,\n    unirisTokenAddress,\n    amount,\n    hash,\n    signer,\n    lockTime\n) {\n    const { abi: HTLCABI, bytecode: HTLCByteCode } = await getHTLC();\n    const factory = new ethers.ContractFactory(HTLCABI, HTLCByteCode, signer);\n\n    const contract = await factory.deploy(\n        recipientEthereum,\n        unirisTokenAddress,\n        ethers.utils.parseUnits(amount, 18),\n        hash,\n        lockTime,\n        { gasLimit: 1000000 }\n    );\n\n    const tx = await contract.deployTransaction.wait();\n    console.log(tx);\n    console.log(\"HTLC contract deployed at \" + contract.address);\n\n    return { contract: contract, transaction: tx }\n}\n\nasync function transferTokensToHTLC(\n    amount,\n    HTLCAddress,\n    unirisContract,\n    signer\n) {\n    const unirisWithSigner = unirisContract.connect(signer);\n\n    const tx = await unirisWithSigner.transfer(\n        HTLCAddress,\n        ethers.utils.parseUnits(amount, 18)\n    );\n\n    return await tx.wait()\n}\n\n\nexport async function transferERC20(state) {\n    const { HTLC_Contract, amount, unirisContract, signer, sourceChainExplorer } = state\n\n    $(\"#ethTransferStep\").addClass(\"is-active\")\n    const transferTokenTx = await transferTokensToHTLC(amount, HTLC_Contract.address, unirisContract, signer);\n    localStorage.setItem(\"transferStep\", \"transferedERC20\")\n\n    // Update the pending transfer state\n    const pendingTransferJSON = localStorage.getItem(\"pendingTransfer\")\n    let pendingTransfer = JSON.parse(pendingTransferJSON)\n    pendingTransfer.erc20transferAddress = transferTokenTx.transactionHash\n    localStorage.setItem(\"pendingTransfer\", JSON.stringify(pendingTransfer))\n\n    console.log(`${amount} UCO transfered`);\n\n    $(\"#txSummary2Label\").html(`Provision UCO: <a href=\"${sourceChainExplorer}/tx/${transferTokenTx.transactionHash}\" target=\"_blank\">${transferTokenTx.transactionHash}</a>`)\n    $(\"#txSummary2\").show();\n    $(\"#ethTransferStep\").removeClass(\"is-active\")\n\n    state.erc20transferAddress = transferTokenTx.transactionHash\n    return state\n}\n\nexport async function deployArchethic(state) {\n    const { HTLC_Contract, amount, secretDigestHex, recipientArchethic, ethChainId, toChainExplorer, HTLC_transaction } = state\n\n    $(\"#archethicDeploymentStep\").addClass(\"is-active\");\n    step = 3;\n\n    const contractAddress = await sendDeployRequest(\n        secretDigestHex,\n        recipientArchethic,\n        amount,\n        HTLC_Contract.address,\n        HTLC_transaction.transactionHash,\n        ethChainId\n    );\n    localStorage.setItem(\"transferStep\", \"deployedArchethicContract\")\n\n    // Update the pending transfer state\n    const pendingTransferJSON = localStorage.getItem(\"pendingTransfer\")\n    let pendingTransfer = JSON.parse(pendingTransferJSON)\n    pendingTransfer.archethicContractAddress = contractAddress\n    localStorage.setItem(\"pendingTransfer\", JSON.stringify(pendingTransfer))\n\n    console.log(\"Contract address on Archethic\", contractAddress);\n    $(\"#txSummary3Label\").html(`Contract address on Archethic : <a href=\"${toChainExplorer}/${contractAddress}\" target=\"_blank\">${contractAddress}</a>`)\n    $(\"#txSummary3\").show();\n\n    $(\"#archethicDeploymentStep\").removeClass(\"is-active\");\n\n    state.archethicContractAddress = contractAddress\n    return state\n}\n\n\nexport async function withdrawEthereum(state) {\n    const { HTLC_Contract, signer, secretHex, unirisContract, UCOPrice, sourceChainExplorer } = state\n\n    const withdrawTx = await withdrawERC20Token(HTLC_Contract, signer, secretHex)\n    localStorage.setItem(\"transferStep\", \"withdrawEthContract\")\n\n    // Update the pending transfer state\n    const pendingTransferJSON = localStorage.getItem(\"pendingTransfer\")\n    let pendingTransfer = JSON.parse(pendingTransferJSON)\n    pendingTransfer.withdrawEthereumAddress = withdrawTx.transactionHash\n    localStorage.setItem(\"pendingTransfer\", JSON.stringify(pendingTransfer))\n\n    console.log(`Ethereum's withdraw transaction - ${withdrawTx.transactionHash}`);\n    $(\"#txSummary4Label\").html(`${fromChainName} swap: <a href=\"${sourceChainExplorer}/tx/${withdrawTx.transactionHash}\" target=\"_blank\">${withdrawTx.transactionHash}</a>`)\n    $(\"#txSummary4\").show();\n\n    const ethAccount = await signer.getAddress();\n    const erc20Balance = await unirisContract.balanceOf(ethAccount);\n    const erc20Amount = ethers.utils.formatUnits(erc20Balance, 18);\n    $(\"#fromBalanceUCO\").text(new Intl.NumberFormat().format(parseFloat(erc20Amount).toFixed(2)));\n    let maxSwap = 20 / UCOPrice\n    $(\"#maxUCOValue\").text(Math.min(erc20Amount / UCOPrice, maxSwap).toFixed(5));\n    $(\"#fromBalanceUSD\").text(erc20Amount * UCOPrice);\n\n    state.withdrawEthereumAddress = withdrawTx.transactionHash\n    return state\n}\n\nexport async function withdrawArchethic({ archethicContractAddress, HTLC_Contract, withdrawEthereumAddress, secretHex, ethChainId, toChainExplorer }) {\n    console.log(archethicContractAddress)\n    const archethicWithdrawTx = await sendWithdrawRequest(\n        archethicContractAddress,\n        HTLC_Contract.address,\n        withdrawEthereumAddress,\n        secretHex,\n        ethChainId\n    );\n    localStorage.setItem(\"transferStep\", \"withdrawArchethicContract\")\n\n    console.log(`Archethic's withdraw transaction ${archethicWithdrawTx}`)\n    $(\"#txSummary5Label\").html(`Archethic swap : <a href=\"${toChainExplorer}/${archethicWithdrawTx}\" target=\"_blank\">${archethicWithdrawTx}</a>`)\n    $(\"#txSummary5\").show();\n}\n\n\nasync function sendDeployRequest(\n    secretDigestHex,\n    recipientAddress,\n    amount,\n    ethereumContractAddress,\n    ethereumContractTransaction,\n    ethChainId\n) {\n    const endTime = new Date();\n    endTime.setSeconds(endTime.getSeconds() + 10000);\n    const endTimeUNIX = Math.floor(endTime / 1000);\n\n    return fetch(\"/swap/deployContract\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            secretHash: secretDigestHex,\n            recipientAddress: recipientAddress,\n            amount: amount * 1e8,\n            endTime: endTimeUNIX,\n            ethereumContractAddress: ethereumContractAddress,\n            ethereumContractTransaction,\n            ethereumChainId: ethChainId,\n        }),\n    })\n        .then(handleResponse)\n        .then((r) => r.contractAddress);\n}\n\nasync function withdrawERC20Token(HTLC_Contract, signer, secret) {\n    const HTLC_ContractSigner = await HTLC_Contract.connect(signer)\n    const tx = await HTLC_ContractSigner.withdraw(`0x${secret}`, { gasLimit: 10000000 })\n    return await tx.wait()\n}\n\nasync function sendWithdrawRequest(\n    archethicContractAddress,\n    ethereumContractAddress,\n    ethereumWithdrawTransaction,\n    secret,\n    ethChainId\n) {\n    return fetch(\"/swap/withdraw\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            archethicContractAddress: archethicContractAddress,\n            ethereumContractAddress: ethereumContractAddress,\n            ethereumWithdrawTransaction: ethereumWithdrawTransaction,\n            secret: secret,\n            ethereumChainId: ethChainId,\n        }),\n    }).then(handleResponse)\n        .then(r => {\n            const { archethicWithdrawTransaction } = r\n            return archethicWithdrawTransaction\n        })\n}\n\nasync function getUnirisTokenABI() {\n    const r = await fetch(\"uco_abi.json\");\n    return await r.json();\n}\n\nasync function getHTLC() {\n    const r = await fetch(\"HTLC.json\");\n    const r_1 = await r.json();\n    return {\n        abi: r_1.abi,\n        bytecode: r_1.bytecode,\n    };\n}", "import { handleResponse } from \"./utils.js\";\n\nexport async function getArchethicBalance(address) {\n    return fetch(`/balances/archethic/${address}`)\n        .then(handleResponse)\n        .then((r) => {\n            return r.balance\n        });\n}", "import { initProgressBar, initPageBridge, changeBtnToTransferInProgress } from \"./ui.js\";\nimport { initChainContext, getConfig } from \"./chain.js\";\nimport { uint8ArrayToHex, handleError } from \"./utils.js\";\nimport { getERC20Contract, getHTLC_Contract, deployHTLC, transferERC20, deployArchethic, withdrawEthereum, withdrawArchethic } from \"./contract\";\nimport { getArchethicBalance } from \"./service.js\";\n\nwindow.onload = async function () {\n  localStorage.removeItem(\"transferStep\")\n  localStorage.removeItem(\"pendingTransfer\")\n\n  if (typeof window.ethereum !== \"undefined\") {\n    console.log(\"MetaMask is installed!\");\n  } else {\n    throw \"No ethereum provider is installed\";\n  }\n};\n\n$(\"#connectMetamaskBtn\").on(\"click\", async () => {\n  try {\n    $(\"#connectMetamaskBtn\").hide();\n    $(\"#connectMetamaskBtnSpinner\").show();\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    // MetaMask requires requesting permission to connect users accounts\n    await provider.send(\"eth_requestAccounts\", []);\n    await startApp(provider);\n  }\n  catch (e) {\n    $(\"#connectMetamaskBtnSpinner\").hide();\n    $(\"#connectMetamaskBtn\").show();\n    $(\"#error\")\n      .text(`${e.message || e}`)\n      .show();\n  }\n});\n\nlet toChainExplorer;\nlet fromChainName;\nlet step;\n\nasync function startApp(provider) {\n\n  const { chainId: ethChainId } = await provider.getNetwork();\n  const signer = provider.getSigner();\n\n  let fromChainName = initChainContext(ethChainId);\n  console.log(fromChainName);\n\n  const {\n    archethicEndpoint,\n    unirisTokenAddress,\n    recipientEthereum,\n    sufficientFunds,\n    UCOPrice,\n    sourceChainExplorer,\n    bridgeAddress\n  } = await getConfig(ethChainId);\n\n  initPageBridge();\n\n  let maxSwap = 20 / UCOPrice;\n  $(\"#nbTokensToSwap\").attr(\"max\", maxSwap);\n\n  toChainExplorer = `${archethicEndpoint}/explorer/transaction`;\n\n  $(\"#ucoPrice\").text(`1 UCO = ${UCOPrice.toFixed(5)}$`).show();\n  $(\"#swapBalanceUSD\").text(0);\n\n  if (!sufficientFunds) {\n    $(\"#error\").text(\n      \"Bridge has insuffficient funds. Please retry later...\"\n    );\n    return;\n  }\n\n  console.log(\"Archethic endpoint: \", archethicEndpoint);\n\n  const account = await signer.getAddress();\n  const unirisContract = await getERC20Contract(unirisTokenAddress, provider);\n\n  const balance = await unirisContract.balanceOf(account);\n  const erc20Amount = ethers.utils.formatUnits(balance, 18);\n  $(\"#fromBalanceUCO\").text(new Intl.NumberFormat().format(parseFloat(erc20Amount).toFixed(8)));\n  $(\"#maxUCOValue\").text(Math.min(erc20Amount / UCOPrice, maxSwap).toFixed(5));\n  $(\"#fromBalanceUSD\").text(new Intl.NumberFormat().format((erc20Amount * UCOPrice).toFixed(5)));\n\n  $(\"#recipientAddress\").on(\"change\", async (e) => {\n    const archethicBalance = await getArchethicBalance($(e.target).val());\n\n    const ucoAmount = archethicBalance / 1e8\n\n    $(\"#toBalanceUCO\").text(new Intl.NumberFormat().format(parseFloat(ucoAmount).toFixed(8)));\n    $(\"#toBalanceUSD\").text(new Intl.NumberFormat().format((UCOPrice * ucoAmount).toFixed(5)));\n    $('#btnSwap').prop('disabled', false);\n  });\n\n  $(\"#recipientAddress\").focus();\n\n  $(\"#nbTokensToSwap\").on(\"change\", (e) => {\n    const amount = $(e.target).val()\n    $(\"#swapBalanceUSD\").text((amount * UCOPrice).toFixed(5))\n  })\n\n  let pendingTransferJSON = localStorage.getItem(\"pendingTransfer\");\n  if (pendingTransferJSON) {\n\n    initProgressBar();\n\n    $(\"#btnSwapSpinnerText\").text(\"Loading previous transfer\");\n    $(\"#btnSwapSpinner\").show();\n    $(\"#btnSwap\").hide();\n\n    const pendingTransfer = JSON.parse(pendingTransferJSON);\n    const state = {\n      HTLC_Contract: await getHTLC_Contract(pendingTransfer.HTLC_Address, provider),\n      HTLC_transaction: pendingTransfer.HTLC_transaction,\n      secretHex: pendingTransfer.secretHex,\n      secretDigestHex: pendingTransfer.secretDigestHex,\n      amount: pendingTransfer.amount,\n      UCOPrice: UCOPrice,\n      ethChainId: ethChainId,\n      recipientEthereum: recipientEthereum,\n      recipientArchethic: pendingTransfer.recipientArchethic,\n      unirisContract: unirisContract,\n      signer: signer,\n      erc20transferAddress: pendingTransfer.erc20transferAddress,\n      archethicContractAddress: pendingTransfer.archethicContractAddress,\n      withdrawEthereumAddress: pendingTransfer.withdrawEthereumAddress,\n      sourceChainExplorer: sourceChainExplorer,\n      toChainExplorer: toChainExplorer\n    }\n\n    $(\"#recipientAddress\").val(pendingTransfer.recipientArchethic);\n    $(\"#nbTokensToSwap\").val(pendingTransfer.amount);\n    const archethicBalance = await getArchethicBalance(pendingTransfer.recipientArchethic);\n\n    const ucoAmount = archethicBalance / 1e8\n\n    $(\"#toBalanceUCO\").text(new Intl.NumberFormat().format(parseFloat(ucoAmount).toFixed(8)));\n    $(\"#toBalanceUSD\").text(new Intl.NumberFormat().format((UCOPrice * ucoAmount).toFixed(5)));\n    $(\"#swapBalanceUSD\").text((pendingTransfer.amount * UCOPrice).toFixed(5));\n\n    $(\"#steps\").show();\n    console.log(fromChainName);\n\n    $(\"#ethDeploymentStep\").removeClass(\"is-active\");\n    $(\"#txSummary1Label\").html(`Contract address on ${fromChainName}: <a href=\"${sourceChainExplorer}/address/${pendingTransfer.HTLC_Address}\" target=\"_blank\">${pendingTransfer.HTLC_Address}</a>`)\n    $(\"#txSummary1\").show();\n    $(\"#ethTransferStep\").addClass(\"is-active\");\n\n    step = 2\n\n    if (pendingTransfer.erc20transferAddress) {\n      step = 3\n      $(\"#txSummary2Label\").html(`Provision UCO: <a href=\"${sourceChainExplorer}/tx/${pendingTransfer.erc20transferAddress}\" target=\"_blank\">${pendingTransfer.erc20transferAddress}</a>`)\n      $(\"#txSummary2\").show();\n      $(\"#ethTransferStep\").removeClass(\"is-active\");\n      $(\"#archethicDeploymentStep\").addClass(\"is-active\");\n    }\n\n    if (pendingTransfer.archethicContractAddress) {\n      step = 4\n      $(\"#txSummary3Label\").html(`Contract address on Archethic : <a href=\"${toChainExplorer}/${pendingTransfer.archethicContractAddress}\" target=\"_blank\">${pendingTransfer.archethicContractAddress}</a>`)\n      $(\"#txSummary3\").show();\n      $(\"#archethicDeploymentStep\").removeClass(\"is-active\");\n      $(\"#swapStep\").addClass(\"is-active\");\n    }\n\n    if (pendingTransfer.withdrawEthereumAddress) {\n      $(\"#swapStep\").removeClass(\"is-active\");\n      $(\"#txSummary4Label\").html(`${fromChainName} swap: <a href=\"${sourceChainExplorer}/tx/${pendingTransfer.withdrawEthereumAddress}\" target=\"_blank\">${pendingTransfer.withdrawEthereumAddress}</a>`)\n      $(\"#txSummary4\").show();\n      $(\"#swapStep\").addClass(\"is-active\");\n    }\n\n    $(\"#btnSwapSpinner\").hide();\n    $(\"#btnSwap\").show();\n    $(\"#btnSwap\").prop(\"disabled\", false);\n\n    $(\"#swapForm\").off();\n    $(\"#swapForm\").on(\"submit\", async (e) => {\n      e.preventDefault();\n      changeBtnToTransferInProgress();\n      try {\n        await goto(localStorage.getItem(\"transferStep\"), state, UCOPrice);\n      }\n      catch (e) {\n        handleError(e);\n      }\n    })\n    return\n  }\n\n  $(\"#swapForm\").on(\"submit\", async (e) => {\n    e.preventDefault();\n    if (!e.target.checkValidity()) {\n      return;\n    }\n\n    const recipientAddress = $(\"#recipientAddress\").val();\n    await handleFormSubmit(\n      signer,\n      unirisContract,\n      recipientEthereum,\n      recipientAddress,\n      ethChainId,\n      UCOPrice,\n      sourceChainExplorer,\n      bridgeAddress,\n      fromChainName\n    );\n  });\n\n}\n\nasync function handleFormSubmit(\n  signer,\n  unirisContract,\n  recipientEthereum,\n  recipientArchethic,\n  ethChainId,\n  UCOPrice,\n  sourceChainExplorer,\n  bridgeAddress,\n  fromChainName\n) {\n\n  changeBtnToTransferInProgress();\n\n  var step = 0;\n\n  const amount = $(\"#nbTokensToSwap\").val();\n\n  const bridgeBalance = await getArchethicBalance(bridgeAddress)\n  if (bridgeBalance <= amount * 10e8) {\n    $(\"#error\").text(\n      \"Bridge has insuffficient funds. Please retry later...\"\n    );\n    return;\n  }\n\n  $(\"#steps\").show();\n\n  const secret = new Uint8Array(32);\n  crypto.getRandomValues(secret);\n\n  const secretHex = uint8ArrayToHex(secret);\n\n  let secretDigest = await crypto.subtle.digest(\"SHA-256\", secret);\n  secretDigest = new Uint8Array(secretDigest);\n\n  const secretDigestHex = uint8ArrayToHex(secretDigest);\n\n  $(\"#ethDeploymentStep\").addClass(\"is-active\");\n  step = 1;\n\n  try {\n    const { contract: HTLC_Contract, transaction: HTLC_tx } = await deployHTLC(\n      recipientEthereum,\n      unirisContract.address,\n      amount,\n      secretDigest,\n      signer,\n      7200 // 2 hours of locktime\n    );\n    localStorage.setItem(\"pendingTransfer\", JSON.stringify({\n      HTLC_Address: HTLC_Contract.address,\n      secretHex: secretHex,\n      secretDigestHex: secretDigestHex,\n      amount: amount,\n      recipientArchethic: recipientArchethic,\n      HTLC_transaction: HTLC_tx\n    }))\n    localStorage.setItem(\"transferStep\", \"deployedEthContract\")\n\n    $(\"#ethDeploymentStep\").removeClass(\"is-active\");\n\n    const HTLCAddress = HTLC_Contract.address\n\n    $(\"#txSummary1Label\").html(`Contract address on ${fromChainName}: <a href=\"${sourceChainExplorer}/address/${HTLC_Contract.address}\" target=\"_blank\">${HTLC_Contract.address}</a>`)\n    $(\"#txSummary1\").show();\n\n    let state = {\n      HTLC_Contract: HTLC_Contract,\n      secretHex: secretHex,\n      secretDigestHex: secretDigestHex,\n      amount: amount,\n      UCOPrice: UCOPrice,\n      ethChainId: ethChainId,\n      recipientEthereum: recipientEthereum,\n      recipientArchethic: recipientArchethic,\n      unirisContract: unirisContract,\n      signer: signer,\n      sourceChainExplorer: sourceChainExplorer,\n      toChainExplorer: toChainExplorer,\n      HTLC_transaction: HTLC_tx\n    }\n    await goto(\"deployedEthContract\", state, UCOPrice)\n\n  } catch (e) {\n    handleError(e)\n  }\n}\n\nasync function goto(step, state, UCOPrice) {\n  switch (step) {\n    case \"deployedEthContract\":\n      step = 2\n      state = await transferERC20(state)\n      return await goto(\"transferedERC20\", state, UCOPrice)\n    case \"transferedERC20\":\n      step = 3\n      state = await deployArchethic(state)\n      return await goto(\"deployedArchethicContract\", state, UCOPrice)\n    case \"deployedArchethicContract\":\n      step = 4\n      $(\"#swapStep\").addClass(\"is-active\");\n      state = await withdrawEthereum(state)\n      return await goto(\"withdrawEthContract\", state, UCOPrice)\n    case \"withdrawEthContract\":\n      await withdrawArchethic(state)\n\n      $(\"#swapStep\").removeClass(\"is-active\");\n      $(\"#btnSwapSpinner\").hide()\n      $('#btnSwap').prop('disabled', false);\n      $('#btnSwap').show()\n      $('#nbTokensToSwap').prop('disabled', false);\n      $('#recipientAddress').prop('disabled', false);\n\n      console.log(\"Token swap finish\");\n      localStorage.removeItem(\"transferStep\")\n      localStorage.removeItem(\"pendingTransfer\")\n\n      setTimeout(async () => {\n        const archethicBalance = await getArchethicBalance(state.recipientArchethic);\n\n        const newUCOBalance = archethicBalance / 1e8\n\n        $(\"#toBalanceUCO\").text(parseFloat(newUCOBalance).toFixed(2));\n        $(\"#toBalanceUSD\").text(UCOPrice * newUCOBalance)\n\n      }, 1000)\n      break\n  }\n}\n\n\n"],
  "mappings": "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",
  "names": ["initPageBridge", "initTxSummary", "initProgressBar", "changeBtnToTransferInProgress", "handleResponse", "response", "resolve", "reject", "byteToHex", "n", "hexOctet", "uint8ArrayToHex", "bytes", "buff", "hexOctets", "i", "handleError", "initChainContext", "ethChainId", "getConfig", "handleResponse", "r", "getERC20Contract", "unirisTokenAddress", "provider", "unirisTokenABI", "getUnirisTokenABI", "getHTLC_Contract", "HTLC_Address", "HTLCABI", "getHTLC", "deployHTLC", "recipientEthereum", "amount", "hash", "signer", "lockTime", "HTLCByteCode", "contract", "tx", "transferTokensToHTLC", "HTLCAddress", "unirisContract", "transferERC20", "state", "HTLC_Contract", "sourceChainExplorer", "transferTokenTx", "pendingTransferJSON", "pendingTransfer", "deployArchethic", "secretDigestHex", "recipientArchethic", "ethChainId", "toChainExplorer", "HTLC_transaction", "contractAddress", "sendDeployRequest", "withdrawEthereum", "secretHex", "UCOPrice", "withdrawTx", "withdrawERC20Token", "ethAccount", "erc20Balance", "erc20Amount", "maxSwap", "withdrawArchethic", "archethicContractAddress", "withdrawEthereumAddress", "archethicWithdrawTx", "sendWithdrawRequest", "recipientAddress", "ethereumContractAddress", "ethereumContractTransaction", "endTime", "endTimeUNIX", "handleResponse", "r", "secret", "ethereumWithdrawTransaction", "archethicWithdrawTransaction", "r_1", "getArchethicBalance", "address", "handleResponse", "r", "startApp", "toChainExplorer", "step", "startApp", "provider", "ethChainId", "signer", "fromChainName", "initChainContext", "archethicEndpoint", "unirisTokenAddress", "recipientEthereum", "sufficientFunds", "UCOPrice", "sourceChainExplorer", "bridgeAddress", "getConfig", "initPageBridge", "maxSwap", "toChainExplorer", "account", "unirisContract", "getERC20Contract", "balance", "erc20Amount", "e", "ucoAmount", "getArchethicBalance", "amount", "pendingTransferJSON", "initProgressBar", "pendingTransfer", "state", "getHTLC_Contract", "changeBtnToTransferInProgress", "goto", "handleError", "recipientAddress", "handleFormSubmit", "recipientArchethic", "secret", "secretHex", "uint8ArrayToHex", "secretDigest", "secretDigestHex", "HTLC_Contract", "HTLC_tx", "deployHTLC", "HTLCAddress", "transferERC20", "deployArchethic", "withdrawEthereum", "withdrawArchethic", "newUCOBalance"]
}
