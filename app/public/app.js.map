{
  "version": 3,
  "sources": ["../client/app.js"],
  "sourcesContent": ["window.onload = async function () {\n  if (typeof window.ethereum !== \"undefined\") {\n    console.log(\"MetaMask is installed!\");\n  } else {\n    throw \"No ethereum provider is installed\";\n  }\n};\n\n$(\"#connectMetamaskBtn\").on(\"click\", async () => {\n  try {\n    $(\"#connectMetamaskBtn\").hide();\n    $(\"#connectMetamaskBtnSpinner\").show();\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    // MetaMask requires requesting permission to connect users accounts\n    await provider.send(\"eth_requestAccounts\", []);\n    await startApp(provider);\n  }\n  catch (e) {\n    $(\"#connectMetamaskBtnSpinner\").hide();\n    $(\"#connectMetamaskBtn\").show();\n    $(\"#error\")\n      .text(`${e.message || e}`)\n      .show();\n  }\n});\n\nlet toChainExplorer;\nlet fromChainName\nlet step\n\nasync function startApp(provider) {\n\n  const { chainId: ethChainId } = await provider.getNetwork();\n  const signer = provider.getSigner();\n\n  let sourceChainLogo;\n\n  switch (ethChainId) {\n    case 80001:\n      sourceChainLogo = \"Polygon-logo.svg\";\n\n      fromChainName = \"Polygon\"\n      $(\"#fromChain\").text(fromChainName)\n      $(\"#fromNetworkLabel\").text(\"Mumbai Polygon Testnet\")\n      $(\"#toNetworkLabel\").text(\"Archethic Testnet\")\n      break;\n    case 137:\n      sourceChainLogo = \"Polygon-logo.svg\";\n      fromChainName = \"Polygon\"\n\n      $(\"#fromChain\").text(fromChainName)\n      $(\"#fromNetworkLabel\").text(\"Polygon\")\n      $(\"#toNetworkLabel\").text(\"Archethic\")\n      break;\n    case 97:\n      sourceChainLogo = \"BSC-logo.svg\";\n      fromChainName = \"Binance\"\n\n      $(\"#fromChain\").text(fromChainName)\n      $(\"#fromNetworkLabel\").text(\"BSC Testnet\")\n      $(\"#toNetworkLabel\").text(\"Archethic Testnet\")\n      break;\n    case 56:\n      sourceChainLogo = \"BSC-logo.svg\";\n      fromChainName = \"Binance\"\n\n      $(\"#fromChain\").text(fromChainName)\n      $(\"#fromNetworkLabel\").text(\"BSC\")\n      $(\"#toNetworkLabel\").text(\"Archethic\")\n      break;\n    case 5:\n      sourceChainLogo = \"Ethereum-logo.svg\";\n      fromChainName = \"Ethereum\"\n\n      $(\"#fromChain\").text(fromChainName)\n      $(\"#fromNetworkLabel\").text(\"Goerli Ethereum Testnet\")\n      $(\"#toNetworkLabel\").text(\"Archethic Testnet\")\n      break;\n    case 1337:\n      sourceChainLogo = \"Ethereum-logo.svg\";\n      fromChainName = \"Ethereum\"\n\n      $(\"#fromChain\").text(fromChainName)\n      $(\"#fromNetworkLabel\").text(\"Ethereum Devnet\")\n      $(\"#toNetworkLabel\").text(\"Archethic Devnet\")\n      break;\n    default:\n      sourceChainLogo = \"Ethereum-logo.svg\";\n      fromChain = \"Ethereum\"\n\n      $(\"#fromChain\").text(fromChainName)\n      $(\"#fromNetworkLabel\").text(\"Ethereum\")\n      $(\"#toNetworkLabel\").text(\"Archethic\")\n      break;\n  }\n\n  $(\"#sourceChainImg\").attr(\"src\", `assets/images/bc-logos/${sourceChainLogo}`);\n\n\n  const {\n    archethicEndpoint,\n    unirisTokenAddress,\n    recipientEthereum,\n    sufficientFunds,\n    UCOPrice,\n    sourceChainExplorer,\n    bridgeAddress\n  } = await getConfig(ethChainId);\n\n  $(\"#connectMetamaskBtnSpinner\").hide();\n  $(\"#connectMetamaskBtn\").show();\n\n  $(\"#main\").hide();\n  $(\"#swapForm\").show();\n\n  let maxSwap = 20 / UCOPrice\n  $(\"#nbTokensToSwap\").attr(\"max\", maxSwap)\n\n  toChainExplorer = `${archethicEndpoint}/explorer/transaction`\n\n  $(\"#ucoPrice\").text(`1 UCO = ${UCOPrice.toFixed(5)}$`).show()\n  $(\"#swapBalanceUSD\").text(0)\n\n  if (!sufficientFunds) {\n    $(\"#error\").text(\n      \"Bridge has insuffficient funds. Please retry later...\"\n    );\n    return;\n  }\n\n  console.log(\"Archethic endpoint: \", archethicEndpoint);\n\n  const account = await signer.getAddress();\n  const unirisContract = await getERC20Contract(unirisTokenAddress, provider);\n\n  const balance = await unirisContract.balanceOf(account);\n  const erc20Amount = ethers.utils.formatUnits(balance, 18)\n  $(\"#fromBalanceUCO\").text(new Intl.NumberFormat().format(parseFloat(erc20Amount).toFixed(8)));\n  $(\"#maxUCOValue\").text(Math.min(erc20Amount / UCOPrice, maxSwap).toFixed(5));\n  $(\"#fromBalanceUSD\").text(new Intl.NumberFormat().format((erc20Amount * UCOPrice).toFixed(5)));\n\n  $(\"#recipientAddress\").on(\"change\", async (e) => {\n    const archethicBalance = await getArchethicBalance($(e.target).val());\n\n    const ucoAmount = archethicBalance / 1e8\n\n    $(\"#toBalanceUCO\").text(new Intl.NumberFormat().format(parseFloat(ucoAmount).toFixed(8)));\n    $(\"#toBalanceUSD\").text(new Intl.NumberFormat().format((UCOPrice * ucoAmount).toFixed(5)));\n    $('#btnSwap').prop('disabled', false);\n  });\n\n  $(\"#recipientAddress\").focus()\n\n  $(\"#nbTokensToSwap\").on(\"change\", (e) => {\n    const amount = $(e.target).val()\n    $(\"#swapBalanceUSD\").text((amount * UCOPrice).toFixed(5))\n  })\n\n  let pendingTransferJSON = localStorage.getItem(\"pendingTransfer\")\n  if (pendingTransferJSON) {\n    $(\"#btnSwapSpinnerText\").text(\"Loading previous transfer...\")\n    $(\"#btnSwapSpinner\").show()\n\n    $(\"#btnSwap\").hide()\n    $(\"#btnSwap\").text(\"Resume transfer\")\n    const pendingTransfer = JSON.parse(pendingTransferJSON)\n    const state = {\n      HTLC_Contract: await getHTLC_Contract(pendingTransfer.HTLC_Address, provider),\n      secretHex: pendingTransfer.secretHex,\n      secretDigestHex: pendingTransfer.secretDigestHex,\n      amount: pendingTransfer.amount,\n      UCOPrice: UCOPrice,\n      ethChainId: ethChainId,\n      recipientEthereum: recipientEthereum,\n      recipientArchethic: pendingTransfer.recipientArchethic,\n      unirisContract: unirisContract,\n      signer: signer,\n      erc20transferAddress: pendingTransfer.erc20transferAddress,\n      archethicContractAddress: pendingTransfer.archethicContractAddress,\n      withdrawEthereumAddress: pendingTransfer.withdrawEthereumAddress,\n      sourceChainExplorer: sourceChainExplorer,\n      toChainExplorer: toChainExplorer\n    }\n\n    $(\"#recipientAddress\").val(pendingTransfer.recipientArchethic)\n    $(\"#nbTokensToSwap\").val(pendingTransfer.amount)\n    const archethicBalance = await getArchethicBalance(pendingTransfer.recipientArchethic);\n\n    const ucoAmount = archethicBalance / 1e8\n\n    $(\"#toBalanceUCO\").text(new Intl.NumberFormat().format(parseFloat(ucoAmount).toFixed(8)));\n    $(\"#toBalanceUSD\").text(new Intl.NumberFormat().format((UCOPrice * ucoAmount).toFixed(5)));\n    $(\"#swapBalanceUSD\").text((pendingTransfer.amount * UCOPrice).toFixed(5))\n\n    $(\"#txSummary\").show();\n    $(\"#steps\").show(); \n\n    $(\"#ethDeploymentStep\").removeClass(\"is-active\");\n    $(\"#txSummary1Label\").html(`Contract address on ${fromChainName}: <a href=\"${sourceChainExplorer}/address/${pendingTransfer.HTLC_Address}\" target=\"_blank\">${pendingTransfer.HTLC_Address}</a>`)\n     $(\"#txSummary1\").show();\n     $(\"#ethTransferStep\").addClass(\"is-active\");\n\n     step = 2\n\n    if (pendingTransfer.erc20transferAddress) {\n      step = 3     \n      $(\"#txSummary2Label\").html(`Provision UCO: <a href=\"${sourceChainExplorer}/tx/${pendingTransfer.erc20transferAddress}\" target=\"_blank\">${pendingTransfer.erc20transferAddress}</a>`)\n      $(\"#txSummary2\").show();\n      $(\"#ethTransferStep\").removeClass(\"is-active\")\n      $(\"#archethicDeploymentStep\").addClass(\"is-active\");\n    }\n\n    if (pendingTransfer.archethicContractAddress) {\n      step = 4\n      $(\"#txSummary3Label\").html(`Contract address on Archethic : <a href=\"${toChainExplorer}/${pendingTransfer.archethicContractAddress}\" target=\"_blank\">${pendingTransfer.archethicContractAddress}</a>`)\n      $(\"#txSummary3\").show();\n      $(\"#archethicDeploymentStep\").removeClass(\"is-active\");\n      $(\"#swapStep\").addClass(\"is-active\")\n    }\n\n    if (pendingTransfer.withdrawEthereumAddress) {\n      $(\"#swapStep\").removeClass(\"is-active\")\n      $(\"#txSummary4Label\").html(`${fromChainName} swap: <a href=\"${sourceChainExplorer}/tx/${pendingTransfer.withdrawEthereumAddress}\" target=\"_blank\">${pendingTransfer.withdrawEthereumAddress}</a>`)\n      $(\"#txSummary4\").show();\n      $(\"#swapStep\").addClass(\"is-active\")\n    }\n\n    $(\"#btnSwapSpinner\").hide()\n    $(\"#btnSwap\").show()\n    $(\"#btnSwap\").prop(\"disabled\", false)\n\n    $(\"#swapForm\").off()\n    $(\"#swapForm\").on(\"submit\", async(e) => {\n      e.preventDefault();\n      $(\"#btnSwap\").hide();\n      $(\"#btnSwapSpinner\").show()\n      $(\"#btnSwapSpinner\").prop(\"disabled\", true)\n      $(\"#btnSwapSpinnerText\").text(\"Transfering ...\")\n      try {\n        await goto(localStorage.getItem(\"transferStep\"), state)\n      }\n      catch(e) {\n        handleError(e)\n      }\n    })\n    return\n  }\n\n  $(\"#swapForm\").on(\"submit\", async (e) => {\n    e.preventDefault();\n    if (!e.target.checkValidity()) {\n      return;\n    }\n\n    const recipientAddress = $(\"#recipientAddress\").val();\n    await handleFormSubmit(\n      signer,\n      unirisContract,\n      recipientEthereum,\n      recipientAddress,\n      ethChainId,\n      UCOPrice,\n      sourceChainExplorer,\n      bridgeAddress\n    );\n  });\n\n}\n\nasync function getERC20Contract(unirisTokenAddress, provider) {\n  const unirisTokenABI = await getUnirisTokenABI();\n  return new ethers.Contract(unirisTokenAddress, unirisTokenABI, provider);\n}\n\nasync function getHTLC_Contract(HTLC_Address, provider) {\n  const { abi: HTLCABI } = await getHTLC();\n  return new ethers.Contract(HTLC_Address, HTLCABI, provider)\n}\n\nasync function handleFormSubmit(\n  signer,\n  unirisContract,\n  recipientEthereum,\n  recipientArchethic,\n  ethChainId,\n  UCOPrice,\n  sourceChainExplorer,\n  bridgeAddress\n) {\n\n  var step = 0;\n\n  const amount = $(\"#nbTokensToSwap\").val();\n\n  $('#btnSwap').prop('disabled', true);\n  $('#nbTokensToSwap').prop('disabled', true);\n  $('#recipientAddress').prop('disabled', true);\n\n  $(\"#btnSwap\").hide();\n  $(\"#btnSwapSpinner\").show();\n\n  const bridgeBalance = await getArchethicBalance(bridgeAddress)\n  if (bridgeBalance <= amount * 10e8) {\n    $(\"#error\").text(\n      \"Bridge has insuffficient funds. Please retry later...\"\n    );\n    return;\n  }\n\n  $(\"#steps\").show();\n  $(\"#txSummary\").hide();\n\n  const secret = new Uint8Array(32);\n  crypto.getRandomValues(secret);\n\n  const secretHex = uint8ArrayToHex(secret);\n\n  let secretDigest = await crypto.subtle.digest(\"SHA-256\", secret);\n  secretDigest = new Uint8Array(secretDigest);\n\n  const secretDigestHex = uint8ArrayToHex(secretDigest);\n\n  $(\"#ethDeploymentStep\").addClass(\"is-active\");\n  step = 1;\n\n  try {\n    const HTLC_Contract = await deployHTLC(\n      recipientEthereum,\n      unirisContract.address,\n      amount,\n      secretDigest,\n      signer,\n      7200 // 2 hours of locktime\n    );\n    localStorage.setItem(\"pendingTransfer\", JSON.stringify({\n      HTLC_Address: HTLC_Contract.address,\n      secretHex: secretHex,\n      secretDigestHex: secretDigestHex,\n      amount: amount,\n      recipientArchethic: recipientArchethic\n    }))\n    localStorage.setItem(\"transferStep\", \"deployedEthContract\")\n\n    $(\"#ethDeploymentStep\").removeClass(\"is-active\");\n\n    $(\"#txSummary\").show();\n\n    const HTLCAddress = HTLC_Contract.address\n\n    $(\"#txSummary1Label\").html(`Contract address on ${fromChainName}: <a href=\"${sourceChainExplorer}/address/${HTLC_Contract.address}\" target=\"_blank\">${HTLC_Contract.address}</a>`)\n    $(\"#txSummary1\").show();\n\n    let state = {\n      HTLC_Contract: HTLC_Contract,\n      secretHex: secretHex,\n      secretDigestHex: secretDigestHex,\n      amount: amount,\n      UCOPrice: UCOPrice,\n      ethChainId: ethChainId,\n      recipientEthereum: recipientEthereum,\n      recipientArchethic: recipientArchethic,\n      unirisContract: unirisContract,\n      signer: signer,\n      sourceChainExplorer: sourceChainExplorer,\n      toChainExplorer: toChainExplorer\n    }\n    await goto(\"deployedEthContract\", state)\n\n  } catch (e) {\n    handleError(e)\n  }\n}\n\nasync function transferERC20(state) {\n    const { HTLC_Contract, amount, unirisContract, signer, sourceChainExplorer } = state\n\n    $(\"#ethTransferStep\").addClass(\"is-active\")\n    const transferTokenTx = await transferTokensToHTLC(amount, HTLC_Contract.address, unirisContract, signer);\n    localStorage.setItem(\"transferStep\", \"transferedERC20\")\n\n    // Update the pending transfer state\n    const pendingTransferJSON = localStorage.getItem(\"pendingTransfer\")\n    let pendingTransfer = JSON.parse(pendingTransferJSON)\n    pendingTransfer.erc20transferAddress = transferTokenTx.transactionHash\n    localStorage.setItem(\"pendingTransfer\", JSON.stringify(pendingTransfer))\n\n    console.log(`${amount} UCO transfered`);\n\n    $(\"#txSummary2Label\").html(`Provision UCO: <a href=\"${sourceChainExplorer}/tx/${transferTokenTx.transactionHash}\" target=\"_blank\">${transferTokenTx.transactionHash}</a>`)\n    $(\"#txSummary2\").show();\n    $(\"#ethTransferStep\").removeClass(\"is-active\")\n\n    state.erc20transferAddress = transferTokenTx.transactionHash\n    return state\n}\n\nasync function deployArchethic(state ) {\n const { HTLC_Contract, amount, secretDigestHex, recipientArchethic, ethChainId, toChainExplorer } =  state\n\n    $(\"#archethicDeploymentStep\").addClass(\"is-active\");\n    step = 3;\n\n    const contractAddress = await sendDeployRequest(\n      secretDigestHex,\n      recipientArchethic,\n      amount,\n      HTLC_Contract.address,\n      ethChainId\n    );\n    localStorage.setItem(\"transferStep\", \"deployedArchethicContract\")\n\n    // Update the pending transfer state\n    const pendingTransferJSON = localStorage.getItem(\"pendingTransfer\")\n    let pendingTransfer = JSON.parse(pendingTransferJSON)\n    pendingTransfer.archethicContractAddress = contractAddress\n    localStorage.setItem(\"pendingTransfer\", JSON.stringify(pendingTransfer))\n\n    console.log(\"Contract address on Archethic\", contractAddress);\n    $(\"#txSummary3Label\").html(`Contract address on Archethic : <a href=\"${toChainExplorer}/${contractAddress}\" target=\"_blank\">${contractAddress}</a>`)\n    $(\"#txSummary3\").show();\n\n    $(\"#archethicDeploymentStep\").removeClass(\"is-active\");\n\n    state.archethicContractAddress = contractAddress\n    return state\n}\n\n\nasync function withdrawEthereum(state) {\n    const { HTLC_Contract, signer, secretHex, unirisContract, UCOPrice, sourceChainExplorer } =  state\n\n    const withdrawTx = await withdrawERC20Token(HTLC_Contract, signer, secretHex)\n    localStorage.setItem(\"transferStep\", \"withdrawEthContract\")\n\n    // Update the pending transfer state\n    const pendingTransferJSON = localStorage.getItem(\"pendingTransfer\")\n    let pendingTransfer = JSON.parse(pendingTransferJSON)\n    pendingTransfer.withdrawEthereumAddress = withdrawTx.transactionHash\n    localStorage.setItem(\"pendingTransfer\", JSON.stringify(pendingTransfer))\n\n    console.log(`Ethereum's withdraw transaction - ${withdrawTx.transactionHash}`);\n    $(\"#txSummary4Label\").html(`${fromChainName} swap: <a href=\"${sourceChainExplorer}/tx/${withdrawTx.transactionHash}\" target=\"_blank\">${withdrawTx.transactionHash}</a>`)\n    $(\"#txSummary4\").show();\n\n    const ethAccount = await signer.getAddress();\n    const erc20Balance = await unirisContract.balanceOf(ethAccount);\n    const erc20Amount = ethers.utils.formatUnits(erc20Balance, 18);\n    $(\"#fromBalanceUCO\").text(new Intl.NumberFormat().format(parseFloat(erc20Amount).toFixed(2)));\n    let maxSwap = 20 / UCOPrice\n    $(\"#maxUCOValue\").text(Math.min(erc20Amount / UCOPrice, maxSwap).toFixed(5));\n    $(\"#fromBalanceUSD\").text(erc20Amount * UCOPrice);\n\n    state.withdrawEthereumAddress = withdrawTx.transactionHash\n    return state\n}\n\nasync function withdrawArchethic({ archethicContractAddress, HTLC_Contract, withdrawEthereumAddress, secretHex, ethChainId, toChainExplorer }) {\n  console.log(archethicContractAddress)\n    const archethicWithdrawTx = await sendWithdrawRequest(\n      archethicContractAddress,\n      HTLC_Contract.address,\n      withdrawEthereumAddress,\n      secretHex,\n      ethChainId\n    );\n    localStorage.setItem(\"transferStep\", \"withdrawArchethicContract\")\n\n    console.log(`Archethic's withdraw transaction ${archethicWithdrawTx}`)\n    $(\"#txSummary5Label\").html(`Archethic swap : <a href=\"${toChainExplorer}/${archethicWithdrawTx}\" target=\"_blank\">${archethicWithdrawTx}</a>`)\n    $(\"#txSummary5\").show();\n}\n\nasync function goto(step, state) {\n  switch(step) {\n    case \"deployedEthContract\":\n      step = 2\n      state = await transferERC20(state)\n      return await goto(\"transferedERC20\", state)\n    case \"transferedERC20\":\n      step = 3\n      state = await deployArchethic(state)\n      return await goto(\"deployedArchethicContract\", state)\n    case \"deployedArchethicContract\":\n      step = 4\n      $(\"#swapStep\").addClass(\"is-active\");\n      state = await withdrawEthereum(state)\n      return await goto(\"withdrawEthContract\", state)\n    case \"withdrawEthContract\":\n      await withdrawArchethic(state)\n\n      $(\"#swapStep\").removeClass(\"is-active\");\n      $(\"#btnSwapSpinner\").hide()\n      $('#btnSwap').prop('disabled', false);\n      $('#btnSwap').show()\n      $('#nbTokensToSwap').prop('disabled', false);\n      $('#recipientAddress').prop('disabled', false);\n\n      console.log(\"Token swap finish\");\n      localStorage.removeItem(\"transferStep\")\n      localStorage.removeItem(\"pendingTransfer\")\n\n      setTimeout(async () => {\n        const archethicBalance = await getArchethicBalance(state.recipientArchethic);\n\n        const newUCOBalance = archethicBalance / 1e8\n\n        $(\"#toBalanceUCO\").text(parseFloat(newUCOBalance).toFixed(2));\n        $(\"#toBalanceUSD\").text(UCOPrice * newUCOBalance)\n\n      }, 1000)\n      break\n  }\n}\n\nasync function sendDeployRequest(\n  secretDigestHex,\n  recipientAddress,\n  amount,\n  ethereumContractAddress,\n  ethChainId\n) {\n  const endTime = new Date();\n  endTime.setSeconds(endTime.getSeconds() + 10000);\n  const endTimeUNIX = Math.floor(endTime / 1000);\n\n  return fetch(\"/swap/deployContract\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      secretHash: secretDigestHex,\n      recipientAddress: recipientAddress,\n      amount: amount * 1e8,\n      endTime: endTimeUNIX,\n      ethereumContractAddress: ethereumContractAddress,\n      ethereumChainId: ethChainId,\n    }),\n  })\n    .then(handleResponse)\n    .then((r) => r.contractAddress);\n}\n\nasync function withdrawERC20Token(HTLC_Contract, signer, secret) {\n  const HTLC_ContractSigner = await HTLC_Contract.connect(signer)\n  const tx = await HTLC_ContractSigner.withdraw(`0x${secret}`, { gasLimit: 10000000 })\n  return await tx.wait()\n}\n\nasync function sendWithdrawRequest(\n  archethicContractAddress,\n  ethereumContractAddress,\n  ethereumWithdrawTransaction,\n  secret,\n  ethChainId\n) {\n  return fetch(\"/swap/withdraw\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      archethicContractAddress: archethicContractAddress,\n      ethereumContractAddress: ethereumContractAddress,\n      ethereumWithdrawTransaction: ethereumWithdrawTransaction,\n      secret: secret,\n      ethereumChainId: ethChainId,\n    }),\n  }).then(handleResponse)\n    .then(r => {\n      const { archethicWithdrawTransaction } = r\n      return archethicWithdrawTransaction\n    })\n}\n\nasync function deployHTLC(\n  recipientEthereum,\n  unirisTokenAddress,\n  amount,\n  hash,\n  signer,\n  lockTime\n) {\n  const { abi: HTLCABI, bytecode: HTLCByteCode } = await getHTLC();\n  const factory = new ethers.ContractFactory(HTLCABI, HTLCByteCode, signer);\n\n  const contract = await factory.deploy(\n    recipientEthereum,\n    unirisTokenAddress,\n    ethers.utils.parseUnits(amount, 18),\n    hash,\n    lockTime,\n    { gasLimit: 1000000 }\n  );\n\n  await contract.deployTransaction.wait();\n  console.log(\"HTLC contract deployed at \" + contract.address);\n\n  return contract;\n}\n\nasync function transferTokensToHTLC(\n  amount,\n  HTLCAddress,\n  unirisContract,\n  signer\n) {\n  const unirisWithSigner = unirisContract.connect(signer);\n\n  const tx = await unirisWithSigner.transfer(\n    HTLCAddress,\n    ethers.utils.parseUnits(amount, 18)\n  );\n\n  return await tx.wait()\n}\n\nconst byteToHex = [];\nfor (let n = 0; n <= 0xff; ++n) {\n  const hexOctet = n.toString(16).padStart(2, \"0\");\n  byteToHex.push(hexOctet);\n}\n\nfunction uint8ArrayToHex(bytes) {\n  const buff = new Uint8Array(bytes);\n  const hexOctets = new Array(buff.length);\n\n  for (let i = 0; i < buff.length; ++i) {\n    hexOctets[i] = byteToHex[buff[i]];\n  }\n\n  return hexOctets.join(\"\");\n}\n\nasync function getConfig(ethChainId) {\n  return fetch(\"/status\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify({\n      ethereumChainId: ethChainId,\n    }),\n  })\n    .then(handleResponse)\n    .then((r) => {\n      if (r.status != \"ok\") {\n        throw r.status;\n      }\n\n      return {\n        archethicEndpoint: r.archethicEndpoint,\n        unirisTokenAddress: r.unirisTokenAddress,\n        recipientEthereum: r.recipientEthereum,\n        sufficientFunds: r.sufficientFunds,\n        UCOPrice: r.UCOPrice,\n        sourceChainExplorer: r.sourceChainExplorer,\n        bridgeAddress: r.bridgeAddress\n      };\n    });\n}\n\nasync function getUnirisTokenABI() {\n  const r = await fetch(\"uco_abi.json\");\n  return await r.json();\n}\n\nasync function getHTLC() {\n  const r = await fetch(\"HTLC.json\");\n  const r_1 = await r.json();\n  return {\n    abi: r_1.abi,\n    bytecode: r_1.bytecode,\n  };\n}\n\nasync function handleResponse(response) {\n  return new Promise(function (resolve, reject) {\n    if (response.status >= 200 && response.status <= 299) {\n      response.json().then(resolve);\n    } else {\n      response\n        .json()\n        .then(reject)\n        .catch(() => reject(response.statusText));\n    }\n  });\n}\n\nasync function getArchethicBalance(address) {\n  return fetch(`/balances/archethic/${address}`)\n    .then(handleResponse)\n    .then((r) => {\n      return r.balance\n    });\n}\n\nfunction handleError(e) {\n  $('#btnSwap').prop('disabled', false);\n  $('#nbTokensToSwap').prop('disabled', false);\n  $('#recipientAddress').prop('disabled', false);\n  $(\"#btnSwap\").show();\n  $(\"#btnSwapSpinner\").hide();\n\n  console.error(e.message || e);\n  $(\"#error\")\n    .text(`${e.message || e}`)\n    .show();\n\n  switch (step) {\n    case 1:\n        $(\"#ethDeploymentStep\").removeClass(\"is-active\");\n        $(\"#ethDeploymentStep\").addClass(\"is-failed\");\n        break;\n      case 2:\n        $(\"#ethTransferStep\").removeClass(\"is-active\");\n        $(\"#ethTransferStep\").addClass(\"is-failed\");\n        break;\n      case 3:\n        $(\"#archethicDeploymentStep\").removeClass(\"is-active\");\n        $(\"#archethicDeploymentStep\").addClass(\"is-failed\");\n        break;\n      case 4:\n        $(\"#swapStep\").removeClass(\"is-active\");\n        $(\"#swapStep\").addClass(\"is-failed\");\n        break;\n      default:\n        break;\n    }\n}\n"],
  "mappings": "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",
  "names": ["startApp", "toChainExplorer", "fromChainName", "step", "provider", "ethChainId", "signer", "sourceChainLogo", "archethicEndpoint", "unirisTokenAddress", "recipientEthereum", "sufficientFunds", "UCOPrice", "sourceChainExplorer", "bridgeAddress", "getConfig", "maxSwap", "account", "unirisContract", "getERC20Contract", "balance", "erc20Amount", "e", "ucoAmount", "getArchethicBalance", "amount", "pendingTransferJSON", "pendingTransfer", "state", "getHTLC_Contract", "goto", "handleError", "recipientAddress", "handleFormSubmit", "unirisTokenABI", "getUnirisTokenABI", "HTLC_Address", "HTLCABI", "getHTLC", "recipientArchethic", "secret", "secretHex", "uint8ArrayToHex", "secretDigest", "secretDigestHex", "HTLC_Contract", "deployHTLC", "HTLCAddress", "transferERC20", "transferTokenTx", "transferTokensToHTLC", "deployArchethic", "contractAddress", "sendDeployRequest", "withdrawEthereum", "withdrawTx", "withdrawERC20Token", "ethAccount", "erc20Balance", "withdrawArchethic", "archethicContractAddress", "withdrawEthereumAddress", "archethicWithdrawTx", "sendWithdrawRequest", "newUCOBalance", "ethereumContractAddress", "endTime", "endTimeUNIX", "handleResponse", "r", "ethereumWithdrawTransaction", "archethicWithdrawTransaction", "hash", "lockTime", "HTLCByteCode", "contract", "byteToHex", "n", "hexOctet", "bytes", "buff", "hexOctets", "i", "r_1", "response", "resolve", "reject", "address"]
}
